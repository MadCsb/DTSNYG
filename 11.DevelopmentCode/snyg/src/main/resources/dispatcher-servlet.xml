<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans  
                        http://www.springframework.org/schema/beans/spring-beans-3.1.xsd  
                        http://www.springframework.org/schema/context  
                        http://www.springframework.org/schema/context/spring-context-3.1.xsd  
                        http://www.springframework.org/schema/mvc  
                        http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd">

      <!-- 启动Spring MVC的注解功能，完成请求和注解POJO的映射    此处为简写形式 会自动注册DefaultAnnotationHandlerMapping与AnnotationMethodHandlerAdapter 两个bean,是spring MVC为@Controllers分发请求所必须的-->  
	  <mvc:annotation-driven />

      <!-- 引用jdbc配置文件 -->
	  <bean id="propertyConfig"
		class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="locations">
		    <list>
				<value>classpath:jdbc_config.properties</value>
			</list>
		</property>
	  </bean>

      <!-- 静态资源的请求,就将该请求转由Web应用服务器默认的Servlet处理，如果不是静态资源的请求，才由DispatcherServlet继续处理 -->
	  <mvc:default-servlet-handler />
	  <mvc:resources mapping="${picUrl}/**" location="file:${uploadPicUrl}" />
	  

	  <!-- 自动扫描,完成bean创建和依赖注入 -->  
	  <context:component-scan base-package="com.msy.travel.*">
	    <!-- 解决spring和springmvc一起使用时配置注解事务失效问题 -->
	    <context:exclude-filter type="annotation" expression="org.springframework.stereotype.Service"/>	  
	  </context:component-scan>  

      <!-- 配置springmvc拦截器     **表示0个或多个目录或字符  *多个字符-->
	  <!-- 
	  <mvc:interceptors>  
        <mvc:interceptor>  
            <mvc:mapping path="/**"/>  
            <mvc:exclude-mapping path="/tologin"/>
            <mvc:exclude-mapping path="/login"/>
            <mvc:exclude-mapping path="/logout"/>
            <mvc:exclude-mapping path="/css/**"/>
            <mvc:exclude-mapping path="/images/**"/>
            <mvc:exclude-mapping path="/js/**"/>
            <mvc:exclude-mapping path="/ckeditor/**"/>
            <mvc:exclude-mapping path="/DatePicker/**"/>
            <mvc:exclude-mapping path="/fullcalendar/**"/>
            <bean class="com.msy.travel.filter.SessionInterceptor"/>  
        </mvc:interceptor>  
      </mvc:interceptors> 
      -->
	  

     <!-- 配置freeMarker的模板路径 -->
	  <bean id="freeMarkerConfigurer" class="com.msy.travel.common.FreeMarkerConfigExtend">   
       <property name="templateLoaderPath" value="/WEB-INF/ftl" />   
       <property name="freemarkerSettings">   
           <props>   
               <prop key="template_update_delay">0</prop>   
               <prop key="default_encoding">UTF-8</prop>             
               <prop key="output_encoding">UTF-8</prop>
               <prop key="locale">zh_CN</prop> 
               <prop key="number_format">#</prop>     
           </props>   
       </property>   
   	  </bean>   
	  
	  <!-- freemarker视图解析器 -->  
	  <bean class="org.springframework.web.servlet.view.freemarker.FreeMarkerViewResolver">  
        <property name="suffix" value=".html" />  
        <property name="contentType" value="text/html;charset=UTF-8" />
        <property name="requestContextAttribute" value="rc"></property>
      </bean>  

      
      <!-- 不使用freemarker视图解析器 
	  <bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
			<property name="prefix" value="/WEB-INF/views/" />
			<property name="suffix" value=".jsp" />
	  </bean>
	  -->

	 <!--启用shiro注解 -->  
     <bean  
        class="org.springframework.aop.framework.autoproxy.DefaultAdvisorAutoProxyCreator"  
        depends-on="lifecycleBeanPostProcessor">  
        <property name="proxyTargetClass" value="true" />  
     </bean>  
     <bean  
        class="org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor">  
        <property name="securityManager" ref="securityManager" />  
     </bean>  
     <!-- shiro为集成springMvc 拦截异常，使用注解时无权限的跳转   -->
     <bean  
        class="org.springframework.web.servlet.handler.SimpleMappingExceptionResolver">  
        <property name="exceptionMappings">  
            <props>  
                <!-- 这里你可以根据需要定义N多个错误异常转发   -->
                <prop key="org.apache.shiro.authz.UnauthorizedException">redirect:/unauthorized</prop>  
                <prop key="org.apache.shiro.authz.UnauthenticatedException">redirect:/unauthorized</prop>  
                <prop key="java.lang.IllegalArgumentException">/error</prop>  <!-- 参数错误(bizError.jsp)  --> 
                <prop key="java.lang.Exception">/error</prop>  <!-- 其他错误为'未定义错误'(unknowError.jsp) -->  
            </props>  
        </property>  
     </bean>


</beans>
